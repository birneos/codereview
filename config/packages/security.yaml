security:
    encoders:
        App\Entity\User: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
    #    users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        api:
#            pattern: ^/api
#            stateless: true
#            anonymous: true
#            provider: app_user_provider
#            json_login:
#                 # username and passw will passing to login_check
#                 check_path: /api/login_check
#                 #username_path: email
#                 #password_path: password
#                 # event handler check whether succcessfully with user data
#                 success_handler: lexik_jwt_authentication.handler.authentication_success
#                 failure_handler: lexik_jwt_authentication.handler.authentication_failure
#            guard:
#                 authenticators:
#                    # checkup for valid token
#                    - lexik_jwt_authentication.jwt_token_authenticator


        main:
            anonymous: true
            lazy: true
           # provider: users_in_memory
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
#        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
